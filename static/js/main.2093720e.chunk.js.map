{"version":3,"sources":["components/Slides.tsx","layouts/CanvasWithTitle.tsx","prefabs/Flash.tsx","prefabs/iTechArt.tsx","prefabs/U5.tsx","slides/Light.tsx","slides/Materials.tsx","prefabs/WebGLVersions.tsx","prefabs/WebGL.tsx","slides/Camera.tsx","slides/Shaders.tsx","codeExample.tsx","slides/CodeExampleSlides.tsx","presentation.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/Code.tsx","components/ThreeCode.tsx"],"names":["Slides","slides","location","useLocation","history","useHistory","currentSlideIndex","findIndex","slide","path","pathname","LinearProgress","style","position","top","right","left","zIndex","variant","value","length","height","map","exact","component","i","to","PageSwitch","setPage","page","push","Math","min","max","useState","setValue","useEffect","prevPage","useCallback","nextPage","handler","e","console","log","code","document","addEventListener","removeEventListener","className","disabled","onClick","width","type","onChange","target","onBlur","onKeyUp","stopPropagation","CanvasWithTitle","children","title","canvasProps","clearColor","Model","props","group","useRef","useGLTF","nodes","materials","useFrame","gl","setClearColor","ref","dispose","material","Ground","geometry","Cube002","scale","Stone","Cube","Back","Cube001","white","BezierCurve","Text","Text001","Text002","ITechArt","state","t","clock","getElapsedTime","current","rotation","z","sin","x","cos","y","PI","Red","Text009","Black","Text009_1","yellow","Plane","Text004","preload","LightsVisualization","pointLightRef","spotLightRef","handlePos","React","useMemo","hand","Vector3","Object","values","curve","CatmullRomCurve3","line","LineLoop","BufferGeometry","setFromPoints","getPoints","LineBasicMaterial","color","getPoint","set","lookAt","useHelper","PointLightHelper","SpotLightHelper","Sky","distance","turbidity","rayleigh","mieCoefficient","mieDirectionalG","inclination","azimuth","castShadow","intensity","Html","transform","src","alt","angle","attach","args","shadow-mapSize-width","shadow-mapSize-height","shadow-camera-far","shadow-camera-left","shadow-camera-right","shadow-camera-top","shadow-camera-bottom","object","receiveShadow","roughness","OrbitControls","MaterialsVisualization","position2","presetsObj","studio","fallback","Environment","preset","background","emissive","Color","wireframe","specular","shininess","flatShading","opacity","transparent","metalness","WebGLVersions","Circle","Text003","Blue","Circle001","Text005","Text006","Cone","Text007","Text008","WebGL","window","innerWidth","innerHeight","OrbitTransformControls","forwardRef","transformControlsRefs","orbitControlsProps","forEach","tcr","controls","callback","event","enabled","CameraSlide","CameraType","cameraUpdate","a","cameraProps","transformControlsRef","mainCamera","secondCamera","OrbitTransformControlsRef","CameraHelper","camera","update","SCREEN_W","SCREEN_H","scene","setDefaultCamera","setViewport","setScissor","setScissorTest","aspect","updateProjectionMatrix","render","PerspectiveCamera","far","TransformControls","Shaders","setTimeout","Prism","highlightAll","backgroundColor","Container","padding","Grid","container","justify","wrap","Code","language","canvasCode","rendererCode","sceneCode","cameraCode","lightCode","meshCode","createTShirt","loadTShirtCode","modelLoadedCode","split","l","join","renderCode","rotateXCode","requestAnimationFrameCode","animateCode","createOrbitControlsCode","renderWithOrbitControlsCode","createFileElement","codeExampleSlides","showDiffOnly","newCode","codeExample","ThreeCode","oldCode","fontSize","direction","item","Avatar","penumbra","OrthographicCamera","frustumSize","border","borderRadius","overflow","allow","sandbox","alignItems","maxWidth","maxHeight","margin","makeDefault","near","bottom","TextureSlide","MeshComponents","bumpMap","useTexture","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById","display","dangerouslySetInnerHTML","__html","highlight","languages","threeImport","diffViewerProps","THREE","GLTFLoader","dat","innerHTML","eval","destroy","oldValue","newValue","splitView","compareMethod","DiffMethod","LINES","extraLinesSurroundingDiff","useDarkTheme","renderContent","str","onLineNumberClick","id"],"mappings":"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KAAM,yBACN8P,QACEC,EACAA,EACAA,EACAA,EACAA,EACAA,GACAA,GDgCkB,2CC9BlBA,IAEJ,CACE/P,KAAM,gCACN8P,QACEC,EACAA,EACAA,EACAA,EACAA,EACAA,GDuBsB,kKCpB1B,CACE/P,KAAM,0CACN8P,QACEC,EACAA,EACAA,EACAA,EACAA,EACAA,GACAA,IAEJ,CACE/P,KAAM,6BACN8P,QACEC,EACAA,EACAA,EACAA,EACAA,EACAA,GACAA,GACAA,IAEJ,CACE/P,KAAM,8BACN8P,QACEC,EACAA,EACAA,EACAA,EACAA,EACAA,GACAA,GACAA,GACAA,IAEJ,CACE/P,KAAM,iCACN8P,QACEC,EACAA,EACAA,EACAA,EACAA,EACAA,GACAA,GACAA,GACAA,MAEJ,CACE/P,KAAM,qCACN8P,QACEC,EACAA,GACAA,EACAA,EACAA,EACAA,EACAA,GACAA,GACAA,GACAA,MAEJ,CACE/P,KAAM,yCACN8P,QACEC,EACAA,GACAA,EACAA,EACAA,EACAA,EACAA,GACAA,GACAA,GACAA,GAA2BA,KAE/B,CACE/P,KAAM,mCACN8P,QACEC,EACAA,GACAA,GACAA,EACAA,EACAA,EACAA,EACAA,GACAA,GACAA,GACAA,GAA2BA,KAE/B,CACE/P,KAAM,4BACN8P,QACEC,EACAA,GACAA,GACAA,EACAA,EACAA,EACAA,EACAA,GACAA,GACAA,GACAA,GACEA,GD/Ge,gTCkHrBlP,KAAI,WAA8BG,EAAGxB,GAAjC,IAAGQ,EAAH,EAAGA,KAAM8P,EAAT,EAASA,QAAYvM,EAArB,wCAA6C,CACjDvD,OACAe,UAAW,wBACT,cAACiP,EAAA,EAAD,aAAWC,QAAO,UAAEzQ,EAAOwB,EAAI,UAAb,aAAE,EAAe8O,QAASA,QAASA,GAAavM,SChKlE+J,GAFehC,OAAOC,WACND,OAAOE,YAIdhM,GAAgB,CAC3B,CACEQ,KAAM,0BACNe,UAAW,kBACT,eAACkC,EAAD,WACE,cAACuF,EAAA,EAAD,CAAMpI,SAAU,EAAE,EAAG,EAAG,GAAxB,SACE,qBAAID,MAAO,CAAE+P,SAAU,QAAS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","file":"static/js/main.2093720e.chunk.js","sourcesContent":["import { LinearProgress } from '@material-ui/core'\nimport React, { useCallback, useEffect, useState } from 'react'\nimport {\n  Switch,\n  Route,\n  Redirect,\n  useLocation,\n  useHistory,\n} from 'react-router-dom'\n\nexport interface ISlide {\n  path: string\n  component: any\n}\n\nexport default function Slides({ slides = [] }: { slides: ISlide[] }) {\n  const location = useLocation()\n  const history = useHistory()\n  const currentSlideIndex = slides.findIndex(\n    (slide) => `/${slide.path}` === location.pathname\n  )\n  const setPage = (page: number) => {\n    history.push(\n      `/${slides[Math.min(Math.max(0, page), slides.length - 1)].path}`\n    )\n  }\n  return (\n    <div>\n      <LinearProgress\n        style={{ position: 'absolute', top: 0, right: 0, left: 0, zIndex: 2 }}\n        variant=\"determinate\"\n        value={(currentSlideIndex * 100) / slides.length}\n      />\n      <main style={{ position: 'relative', height: '100vh' }}>\n        <Switch>\n          {slides.map((slide) => (\n            <Route key={slide.path} exact path={`/${slide.path}`}>\n              {slide.component()}\n            </Route>\n          ))}\n          {slides.map((slide, i) => (\n            <Redirect\n              key={i}\n              exact\n              path={`/page/${i + 1}`}\n              to={`/${slide.path}`}\n            />\n          ))}\n          <Redirect path=\"/\" to=\"/page/1\" />\n        </Switch>\n      </main>\n      <PageSwitch\n        currentSlideIndex={currentSlideIndex}\n        slides={slides}\n        setPage={setPage}\n      />\n    </div>\n  )\n}\n\nfunction PageSwitch({\n  currentSlideIndex,\n  setPage,\n  slides,\n}: {\n  currentSlideIndex: number\n  setPage: any\n  slides: ISlide[]\n}) {\n  const [value, setValue] = useState(currentSlideIndex + 1)\n\n  useEffect(() => {\n    setValue(currentSlideIndex + 1)\n  }, [currentSlideIndex])\n\n  const prevPage = useCallback(() => {\n    // setValue(currentSlideIndex)\n    setPage(currentSlideIndex - 1)\n  }, [currentSlideIndex, setPage])\n\n  const nextPage = useCallback(() => {\n    // setValue(currentSlideIndex + 2)\n    setPage(currentSlideIndex + 1)\n  }, [currentSlideIndex, setPage])\n\n  const handleChange = ({\n    target: { value },\n  }: React.ChangeEvent<HTMLInputElement>) =>\n    setValue(Math.min(Math.max(1, +value), slides.length))\n\n  const handleKeyUp = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.code === 'ArrowLeft' || e.code === 'ArrowRight') {\n      e.stopPropagation()\n    }\n  }\n\n  const handleBlur = () => setPage(value - 1)\n\n  useEffect(() => {\n    const handler = (e: KeyboardEvent) => {\n      console.log(e.code)\n      if (e.code === 'ArrowLeft') {\n        prevPage()\n      } else if (e.code === 'ArrowRight') {\n        nextPage()\n      }\n    }\n    document.addEventListener('keyup', handler)\n    return () => document.removeEventListener('keyup', handler)\n  }, [nextPage, prevPage])\n\n  return (\n    <div className=\"page-switch \">\n      <button disabled={currentSlideIndex <= 0} onClick={prevPage}>\n        {'<='}\n      </button>\n      <input\n        style={{ width: '30px' }}\n        type=\"number\"\n        value={value}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        onKeyUp={handleKeyUp}\n      />\n      <button\n        disabled={currentSlideIndex >= slides.length - 1}\n        onClick={nextPage}\n      >\n        {'=>'}\n      </button>\n      <div>{slides[currentSlideIndex]?.path}</div>\n    </div>\n  )\n}\n","import React, { Suspense } from 'react'\nimport { Canvas } from 'react-three-fiber'\nimport { OrbitControls } from '@react-three/drei'\n\nexport default function CanvasWithTitle({\n  children = null,\n  title = '',\n  clearColor = 'white',\n  ...canvasProps\n}) {\n  return (\n    <>\n      {title ? (\n        <h1 style={{ position: 'absolute', zIndex: 2 }}>{title}</h1>\n      ) : null}\n      <Canvas {...canvasProps}>{children}</Canvas>\n    </>\n  )\n}\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport * as THREE from 'three'\nimport React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\n\nimport { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'\nimport { useFrame } from 'react-three-fiber'\n\ntype GLTFResult = GLTF & {\n  nodes: {\n    Cube002: THREE.Mesh\n    Cube: THREE.Mesh\n    Cube001: THREE.Mesh\n    BezierCurve: THREE.Mesh\n    Text: THREE.Mesh\n    Text001: THREE.Mesh\n    Text002: THREE.Mesh\n  }\n  materials: {\n    Ground: THREE.MeshStandardMaterial\n    Stone: THREE.MeshStandardMaterial\n    Back: THREE.MeshStandardMaterial\n    white: THREE.MeshStandardMaterial\n  }\n}\n\nexport default function Model(props: JSX.IntrinsicElements['group']) {\n  const group = useRef<THREE.Group>()\n  const { nodes, materials } = useGLTF('/models/flash.glb') as GLTFResult\n  useFrame(({ gl }) => {\n    gl.setClearColor(0x000000)\n  })\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <mesh\n        material={materials.Ground}\n        geometry={nodes.Cube002.geometry}\n        scale={[2, 1, 2]}\n      >\n        <mesh\n          scale={[0.25, 0.5, 0.25]}\n          material={materials.Stone}\n          geometry={nodes.Cube.geometry}\n        >\n          <mesh material={materials.Back} geometry={nodes.Cube001.geometry}>\n            <mesh\n              material={materials.white}\n              geometry={nodes.BezierCurve.geometry}\n            />\n          </mesh>\n          <mesh material={materials.white} geometry={nodes.Text.geometry} />\n          <mesh material={materials.white} geometry={nodes.Text001.geometry} />\n          <mesh material={materials.white} geometry={nodes.Text002.geometry} />\n        </mesh>\n      </mesh>\n    </group>\n  )\n}\n\nuseGLTF.preload('/flash.glb')\n","import { useRef } from 'react'\nimport { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'\nimport { useFrame } from 'react-three-fiber'\nimport { useGLTF } from '@react-three/drei'\n\ntype GLTFResult = GLTF & {\n  nodes: {\n    Text009: THREE.Mesh\n    Text009_1: THREE.Mesh\n    Plane: THREE.Mesh\n  }\n  materials: {\n    Red: THREE.MeshStandardMaterial\n    Black: THREE.MeshStandardMaterial\n    Plane: THREE.MeshStandardMaterial\n  }\n}\n\nexport default function ITechArt(props: JSX.IntrinsicElements['group']) {\n  const group = useRef<THREE.Group>()\n  const { nodes, materials } = useGLTF('/iTechArt.glb') as GLTFResult\n  useFrame((state) => {\n    const t = state.clock.getElapsedTime()\n    if (group.current) {\n      group.current.rotation.z = (1 + Math.sin(t / 1.5)) / 20\n      group.current.rotation.x = Math.cos(t / 4) / 8\n      group.current.rotation.y = Math.sin(t / 4) / 8\n      group.current.position.y = (1 + Math.sin(t / 1.5)) / 10\n    }\n  })\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <group position={[0, 0, 0.06]} rotation={[Math.PI / 2, 0, 0]}>\n        <mesh material={materials.Red} geometry={nodes.Text009.geometry} />\n        <mesh material={materials.Black} geometry={nodes.Text009_1.geometry} />\n      </group>\n      {/* <mesh\n        material={materials.Plane}\n        geometry={nodes.Plane.geometry}\n        rotation={[Math.PI / 2, 0, 0]}\n        scale={[3.64, 2.03, 2.03]}\n      /> */}\n    </group>\n  )\n}\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport * as THREE from 'three'\nimport React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\n\nimport { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'\nimport { useFrame } from 'react-three-fiber'\n\ntype GLTFResult = GLTF & {\n  nodes: {\n    Plane: THREE.Mesh\n    Text004: THREE.Mesh\n  }\n  materials: {\n    yellow: THREE.MeshStandardMaterial\n    Black: THREE.MeshStandardMaterial\n  }\n}\n\nexport default function Model(props: JSX.IntrinsicElements['group']) {\n  const group = useRef<THREE.Group>()\n  const { nodes, materials } = useGLTF('/models/U5.glb') as GLTFResult\n  useFrame((state) => {\n    const t = state.clock.getElapsedTime()\n    if (group.current) {\n      group.current.rotation.z = (1 + Math.sin(t / 1.5)) / 20\n      group.current.rotation.x = Math.cos(t / 4) / 8\n      group.current.rotation.y = Math.sin(t / 4) / 8\n      group.current.position.y = (1 + Math.sin(t / 1.5)) / 10\n    }\n  })\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <mesh material={materials.yellow} geometry={nodes.Plane.geometry}>\n        <mesh material={materials.Black} geometry={nodes.Text004.geometry} />\n      </mesh>\n    </group>\n  )\n}\n\nuseGLTF.preload('/U5.glb')\n","import {\n  CurveModifierRef,\n  Html,\n  OrbitControls,\n  Sky,\n  useHelper,\n} from '@react-three/drei'\nimport React, { useRef } from 'react'\nimport { useFrame } from 'react-three-fiber'\nimport {\n  Vector3,\n  CatmullRomCurve3,\n  LineLoop,\n  BufferGeometry,\n  LineBasicMaterial,\n  PointLightHelper,\n  SpotLightHelper,\n} from 'three'\n\nexport default function LightsVisualization() {\n  const pointLightRef = useRef<THREE.Object3D>(null!)\n  const spotLightRef = useRef<THREE.Object3D>(null!)\n\n  const handlePos = React.useMemo(\n    () =>\n      [\n        { x: 10, y: 2, z: -10 },\n        { x: 10, y: 5, z: 7 },\n        { x: -5, y: 0, z: 5 },\n        { x: -10, y: 2, z: -10 },\n      ].map((hand) => new Vector3(...Object.values(hand))),\n    []\n  )\n\n  const curve = React.useMemo(\n    () => new CatmullRomCurve3(handlePos, true, 'centripetal'),\n    [handlePos]\n  )\n\n  const line = React.useMemo(\n    () =>\n      new LineLoop(\n        new BufferGeometry().setFromPoints(curve.getPoints(50)),\n        new LineBasicMaterial({ color: 0xffff00 })\n      ),\n    [curve]\n  )\n\n  useFrame((state) => {\n    if (pointLightRef.current) {\n      const t = state.clock.getElapsedTime() / 10\n      const position = curve.getPoint(t)\n      pointLightRef.current.position.set(position.x, position.y, position.z)\n      pointLightRef.current.lookAt(0, 0, 0)\n      state.gl.setClearColor(0x000000)\n    }\n  })\n\n  useHelper(pointLightRef, PointLightHelper, 10, 'yellow')\n  useHelper(spotLightRef, SpotLightHelper, 'white')\n\n  return (\n    <>\n      <Sky\n        distance={3000}\n        turbidity={8}\n        rayleigh={6}\n        mieCoefficient={0.005}\n        mieDirectionalG={0.8}\n        inclination={0.49}\n        azimuth={0.25}\n      />\n      <pointLight\n        castShadow\n        color={0xeeeebb}\n        intensity={0.5}\n        distance={15}\n        ref={pointLightRef}\n      >\n        <Html>\n          <img\n            style={{ transform: 'translate(-25px, -25px)' }}\n            width=\"50px\"\n            src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a3/Light_bulb_%28yellow%29_icon.svg/768px-Light_bulb_%28yellow%29_icon.svg.png\"\n            alt=\"Light\"\n          />\n        </Html>\n        <meshBasicMaterial />\n      </pointLight>\n      <spotLight\n        position={[2, 7, 5]}\n        angle={0.5}\n        distance={15}\n        castShadow\n        color={0xeeeebb}\n        intensity={1}\n        ref={spotLightRef}\n      >\n        <Html>\n          <img\n            style={{ transform: 'translate(-25px, -25px)' }}\n            width=\"50px\"\n            src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a3/Light_bulb_%28yellow%29_icon.svg/768px-Light_bulb_%28yellow%29_icon.svg.png\"\n            alt=\"Light\"\n          />\n        </Html>\n        <meshBasicMaterial />\n      </spotLight>\n      <fog attach=\"fog\" args={['gray', 0, 400]} />\n      <ambientLight intensity={0.01} />\n      <directionalLight\n        castShadow\n        color={0x3b2431}\n        position={[0, 5, -10]}\n        intensity={0.7}\n        shadow-mapSize-width={1024}\n        shadow-mapSize-height={1024}\n        shadow-camera-far={50}\n        shadow-camera-left={-10}\n        shadow-camera-right={10}\n        shadow-camera-top={10}\n        shadow-camera-bottom={-10}\n      />\n      <primitive object={line} />\n      <mesh receiveShadow castShadow position={[-2, 0, 2]}>\n        <sphereBufferGeometry args={[1, 32, 32]} />\n        <meshStandardMaterial roughness={0.1} color={0xffffff} />\n      </mesh>\n      <mesh receiveShadow castShadow position={[2, 0, 2]}>\n        <boxBufferGeometry args={[2, 2, 2]} />\n        <meshStandardMaterial roughness={0.1} color={0xffffff} />\n      </mesh>\n      <mesh receiveShadow castShadow position={[2, 0, -2]}>\n        <coneBufferGeometry args={[2, 5, 32]} />\n        <meshStandardMaterial roughness={0.1} color={0xffffff} />\n      </mesh>\n      <mesh receiveShadow castShadow position={[-2, 0, -2]}>\n        <torusKnotBufferGeometry args={[1, 1, 100, 16]} />\n        <meshStandardMaterial roughness={0.1} color={0xffffff} />\n      </mesh>\n      <mesh position={[0, -1, 0]}>\n        <boxBufferGeometry args={[200, 0.1, 200]} />\n        <meshStandardMaterial roughness={0.2} color={0xffffff} />\n      </mesh>\n      <OrbitControls />\n    </>\n  )\n}\n","import {\n  CurveModifierRef,\n  Environment,\n  Html,\n  OrbitControls,\n  Sky,\n  useHelper,\n} from '@react-three/drei'\nimport React, { Suspense, useRef } from 'react'\nimport { useFrame } from 'react-three-fiber'\nimport {\n  Vector3,\n  CatmullRomCurve3,\n  LineLoop,\n  BufferGeometry,\n  LineBasicMaterial,\n  PointLightHelper,\n  Color,\n} from 'three'\nimport { presetsObj } from '@react-three/drei/helpers/environment-assets'\n\nexport default function MaterialsVisualization() {\n  const pointLightRef = useRef<THREE.Object3D>(null!)\n  const spotLightRef = useRef<THREE.Object3D>(null!)\n\n  const handlePos = React.useMemo(\n    () =>\n      [\n        { x: 5, y: 1, z: -5 },\n        { x: 5, y: 3, z: 4 },\n        { x: -2, y: 2, z: 2 },\n        { x: -5, y: 1, z: -5 },\n      ].map((hand) => new Vector3(...Object.values(hand))),\n    []\n  )\n\n  const curve = React.useMemo(\n    () => new CatmullRomCurve3(handlePos, true, 'centripetal'),\n    [handlePos]\n  )\n\n  const line = React.useMemo(\n    () =>\n      new LineLoop(\n        new BufferGeometry().setFromPoints(curve.getPoints(50)),\n        new LineBasicMaterial({ color: 0xffff00 })\n      ),\n    [curve]\n  )\n\n  useFrame((state) => {\n    const t = state.clock.getElapsedTime() / 10\n    const position = curve.getPoint(t)\n    const position2 = curve.getPoint(t + 0.5)\n    pointLightRef.current.position.set(position.x, position.y, position.z)\n    pointLightRef.current.lookAt(0, 0, 0)\n    spotLightRef.current.position.set(position2.x, position2.y, position2.z)\n    spotLightRef.current.lookAt(0, 0, 0)\n    state.gl.setClearColor(0x000000)\n  })\n\n  console.log(presetsObj.studio)\n\n  return (\n    <>\n      <Suspense fallback={null}>\n        <Environment preset=\"apartment\" background={true} />\n      </Suspense>\n      <pointLight castShadow color={0xffffff} intensity={1} ref={pointLightRef}>\n        <Html>\n          <img\n            style={{ transform: 'translate(-25px, -25px)' }}\n            width=\"50px\"\n            src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a3/Light_bulb_%28yellow%29_icon.svg/768px-Light_bulb_%28yellow%29_icon.svg.png\"\n            alt=\"Light\"\n          />\n        </Html>\n        <meshBasicMaterial />\n      </pointLight>\n      <spotLight castShadow color={0xffffff} intensity={1} ref={spotLightRef}>\n        <Html>\n          <img\n            style={{ transform: 'translate(-25px, -25px)' }}\n            width=\"50px\"\n            src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a3/Light_bulb_%28yellow%29_icon.svg/768px-Light_bulb_%28yellow%29_icon.svg.png\"\n            alt=\"Light\"\n          />\n        </Html>\n        <meshBasicMaterial />\n      </spotLight>\n      <fog attach=\"fog\" args={['gray', 0, 400]} />\n      <ambientLight intensity={0.2} />\n      <mesh position={[-2, 0, -2]}>\n        <boxBufferGeometry args={[1, 1, 1]} />\n        <meshLambertMaterial color={0x00dd00} />\n      </mesh>\n      <mesh position={[0, 0, -2]}>\n        <boxBufferGeometry args={[1, 1, 1]} />\n        <meshLambertMaterial color={0x666666} emissive={new Color(0xff0000)} />\n      </mesh>\n      <mesh position={[2, 0, -2]}>\n        <boxBufferGeometry args={[1, 1, 1]} />\n        <meshBasicMaterial color={0xffaa00} wireframe />\n      </mesh>\n      <mesh position={[-2, 0, 0]}>\n        <boxBufferGeometry args={[1, 1, 1]} />\n        <meshPhongMaterial\n          color={0xdddddd}\n          specular={new Color(0x009900)}\n          shininess={30}\n          flatShading\n        />\n      </mesh>\n      <mesh position={[0, 0, 0]}>\n        <boxBufferGeometry args={[1, 1, 1]} />\n        <meshNormalMaterial flatShading />\n      </mesh>\n      <mesh position={[2, 0, 0]}>\n        <boxBufferGeometry args={[1, 1, 1]} />\n        <meshDepthMaterial />\n      </mesh>\n      <mesh position={[-2, 0, 2]}>\n        <boxBufferGeometry args={[1, 1, 1]} />\n        <meshPhongMaterial\n          color={0x000000}\n          specular={new Color(0x666666)}\n          emissive={new Color(0xff0000)}\n          shininess={10}\n          opacity={0.9}\n          transparent\n        />\n      </mesh>\n      <mesh receiveShadow castShadow position={[0, 0, 2]}>\n        <boxBufferGeometry args={[1, 1, 1]} />\n        <meshPhysicalMaterial metalness={0.5} roughness={0.5} color=\"grey\" />\n      </mesh>\n      <mesh receiveShadow castShadow position={[2, 0, 2]}>\n        <boxBufferGeometry args={[1, 1, 1]} />\n        <meshPhysicalMaterial metalness={0.7} roughness={0} color=\"white\" />\n      </mesh>\n\n      <mesh receiveShadow position={[0, -1, 0]}>\n        <boxBufferGeometry args={[20, 0.1, 20]} />\n        <shadowMaterial attach=\"material\" opacity={0.5} />\n      </mesh>\n      <mesh position={[0, -1, 0]}>\n        <boxBufferGeometry args={[20, 0.1, 20]} />\n        <meshPhysicalMaterial metalness={0.7} roughness={0.2} color=\"grey\" />\n      </mesh>\n      <OrbitControls />\n    </>\n  )\n}\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport * as THREE from 'three'\nimport React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\n\nimport { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'\nimport { useFrame } from 'react-three-fiber'\n\ntype GLTFResult = GLTF & {\n  nodes: {\n    Circle: THREE.Mesh\n    Text003: THREE.Mesh\n    Circle001: THREE.Mesh\n    Text005: THREE.Mesh\n    Text006: THREE.Mesh\n    Cone: THREE.Mesh\n    Text007: THREE.Mesh\n    Text008: THREE.Mesh\n  }\n  materials: {\n    Red: THREE.MeshStandardMaterial\n    Blue: THREE.MeshStandardMaterial\n  }\n}\n\nexport default function WebGLVersions(props: JSX.IntrinsicElements['group']) {\n  const group = useRef<THREE.Group>()\n  const { nodes, materials } = useGLTF('/models/WebGL.glb') as GLTFResult\n  useFrame((state) => {\n    const t = state.clock.getElapsedTime()\n    if (group.current) {\n      group.current.rotation.z = (1 + Math.sin(t / 1.5)) / 200\n      group.current.rotation.x = Math.cos(t / 4) / 160\n      group.current.rotation.y = Math.sin(t / 4) / 160\n      group.current.position.y = (1 + Math.sin(t / 1.5)) / 10\n    }\n  })\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <group position={[-2, 0, 0]}>\n        <mesh\n          material={materials.Red}\n          geometry={nodes.Circle.geometry}\n          position={[-3, -2, 0]}\n        >\n          <mesh\n            material={materials.Red}\n            geometry={nodes.Text003.geometry}\n            position={[-1, -0.33, 0.24]}\n          />\n        </mesh>\n        <mesh\n          material={materials.Blue}\n          geometry={nodes.Circle001.geometry}\n          position={[-3, 2, -0.14]}\n        >\n          <mesh\n            material={materials.Blue}\n            geometry={nodes.Text005.geometry}\n            position={[-1.15, -0.33, 0.13]}\n          />\n        </mesh>\n        <mesh\n          material={materials.Blue}\n          geometry={nodes.Text006.geometry}\n          position={[-0.3, 1.7, -0.01]}\n        />\n        <mesh\n          material={materials.Blue}\n          geometry={nodes.Cone.geometry}\n          position={[-2, 0, 0.1]}\n        />\n        <mesh\n          material={materials.Red}\n          geometry={nodes.Text007.geometry}\n          position={[-0.5, -2.4, -0.01]}\n        />\n      </group>\n      <group position={[5, 0, 0]}>\n        <mesh\n          material={materials.Red}\n          geometry={nodes.Circle.geometry}\n          position={[-3, -2, 0]}\n        >\n          <mesh\n            material={materials.Red}\n            geometry={nodes.Text003.geometry}\n            position={[-1, -0.33, 0.24]}\n          />\n        </mesh>\n        <mesh\n          material={materials.Blue}\n          geometry={nodes.Circle001.geometry}\n          position={[-3, 2, -0.14]}\n        >\n          <mesh\n            material={materials.Blue}\n            geometry={nodes.Text005.geometry}\n            position={[-1.15, -0.33, 0.13]}\n          />\n        </mesh>\n        <mesh\n          material={materials.Blue}\n          geometry={nodes.Text008.geometry}\n          position={[-0.3, 1.65, 0]}\n        />\n        <mesh\n          material={materials.Blue}\n          geometry={nodes.Cone.geometry}\n          position={[-2, 0, 0.1]}\n        />\n        <mesh\n          material={materials.Red}\n          geometry={nodes.Text006.geometry}\n          position={[-0.3, -2.35, -0.01]}\n        />\n      </group>\n    </group>\n  )\n}\n\nuseGLTF.preload('/WebGL.glb')\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport * as THREE from 'three'\nimport React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\n\nimport { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'\nimport { useFrame } from 'react-three-fiber'\n\ntype GLTFResult = GLTF & {\n  nodes: {\n    Circle: THREE.Mesh\n    Text003: THREE.Mesh\n    Circle001: THREE.Mesh\n    Text005: THREE.Mesh\n    Text006: THREE.Mesh\n    Cone: THREE.Mesh\n    Text007: THREE.Mesh\n    Text008: THREE.Mesh\n  }\n  materials: {\n    Red: THREE.MeshStandardMaterial\n    Blue: THREE.MeshStandardMaterial\n  }\n}\n\nexport default function WebGL(props: JSX.IntrinsicElements['group']) {\n  const group = useRef<THREE.Group>()\n  const { nodes, materials } = useGLTF('/models/WebGL.glb') as GLTFResult\n  useFrame((state) => {\n    const t = state.clock.getElapsedTime()\n    if (group.current) {\n      group.current.rotation.z = (1 + Math.sin(t / 1.5)) / 20\n      group.current.rotation.x = Math.cos(t / 4) / 8\n      group.current.rotation.y = Math.sin(t / 4) / 8\n      group.current.position.y = (1 + Math.sin(t / 1.5)) / 10\n    }\n  })\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <mesh material={materials.Red} geometry={nodes.Circle.geometry}>\n        <mesh\n          material={materials.Red}\n          geometry={nodes.Text003.geometry}\n          position={[-1, -0.33, 0.24]}\n        />\n      </mesh>\n    </group>\n  )\n}\n\nuseGLTF.preload('/WebGL.glb')\n","import {\n  useHelper,\n  TransformControls,\n  OrbitControls,\n  PerspectiveCamera,\n  Html,\n} from '@react-three/drei'\nimport React, { useEffect, useRef } from 'react'\nimport { useFrame } from 'react-three-fiber'\nimport THREE, {\n  CameraHelper,\n  PerspectiveCamera as PerspectiveCameraThree,\n} from 'three'\n\nlet SCREEN_WIDTH = window.innerWidth\nlet SCREEN_HEIGHT = window.innerHeight\nlet aspect = SCREEN_WIDTH / SCREEN_HEIGHT\nconst frustumSize = 600\n\nfunction CameraVisualization({ CameraType, ...cameraProps }) {\n  const camera = useRef()\n  useHelper(camera, CameraHelper, 1, 'hotpink')\n  return (\n    <>\n      <CameraType\n        makeDefault={false}\n        scale={[0.002, 0.002, 0.002]}\n        position={[0, 0, 2]}\n        ref={camera}\n        {...cameraProps}\n      >\n        <meshBasicMaterial />\n      </CameraType>\n    </>\n  )\n}\n\nconst OrbitTransformControls = React.forwardRef(\n  (\n    {\n      transformControlsRefs,\n      ...orbitControlsProps\n    }: { transformControlsRefs } & OrbitControls,\n    ref: React.MutableRefObject<any>\n  ) => {\n    /* const ref = React.useRef<OrbitControls>() */\n\n    useEffect(() => {\n      transformControlsRefs.forEach((tcr) => {\n        if (tcr.current) {\n          const { current: controls } = tcr\n          const callback = (event) => (ref.current.enabled = !event.value)\n\n          controls.addEventListener('dragging-changed', callback)\n          return () =>\n            controls.removeEventListener('dragging-changed', callback)\n        }\n      })\n    })\n    return <OrbitControls ref={ref} {...orbitControlsProps} />\n  }\n)\n\nexport default function CameraSlide({\n  CameraType,\n  cameraUpdate = (a) => {},\n  ...cameraProps\n}) {\n  const transformControlsRef = React.useRef<TransformControls>()\n  const mainCamera = useRef<THREE.PerspectiveCamera>(null!)\n  const secondCamera = useRef<THREE.PerspectiveCamera>(null!)\n  const OrbitTransformControlsRef = useRef<OrbitControls>(null!)\n  useHelper(secondCamera, CameraHelper, 1, 'hotpink')\n\n  useEffect(() => {\n    mainCamera.current.lookAt(0, 0, 0)\n    transformControlsRef.current.camera = mainCamera.current\n    OrbitTransformControlsRef.current.object = mainCamera.current\n    OrbitTransformControlsRef.current.update()\n  })\n\n  useFrame((state) => {\n    const { scene, gl, setDefaultCamera } = state\n    let SCREEN_W, SCREEN_H\n    SCREEN_W = window.innerWidth\n    SCREEN_H = window.innerHeight\n\n    let left, bottom, width, height\n\n    if (secondCamera.current) {\n      left = 0.7 * SCREEN_W + 1\n      bottom = 1\n      width = 0.3 * SCREEN_W - 2\n      height = 0.5 * SCREEN_H - 2\n      gl.setViewport(left, bottom, width, height)\n      gl.setScissor(left, bottom, width, height)\n      gl.setScissorTest(true) // clip out \"viewport\"\n      // setDefaultCamera(secondCamera.current)\n      cameraUpdate(secondCamera.current)\n      secondCamera.current.aspect = width / height\n      secondCamera.current.updateProjectionMatrix()\n\n      OrbitTransformControlsRef.current.update()\n      gl.render(scene, secondCamera.current)\n    }\n  }, 1)\n\n  useFrame((state) => {\n    const { scene, gl, setDefaultCamera } = state\n    let SCREEN_W, SCREEN_H\n    SCREEN_W = window.innerWidth\n    SCREEN_H = window.innerHeight\n\n    let left, bottom, width, height\n\n    if (mainCamera.current) {\n      left = 0\n      bottom = 0\n      width = SCREEN_W\n      height = SCREEN_H\n      gl.setViewport(left, bottom, width, height)\n      gl.setScissor(left, bottom, width, height)\n      gl.setScissorTest(true)\n      // setDefaultCamera(mainCamera.current)\n      mainCamera.current.aspect = width / height\n      mainCamera.current.updateProjectionMatrix()\n      OrbitTransformControlsRef.current.update()\n      gl.render(scene, mainCamera.current)\n    }\n  }, 0)\n\n  return (\n    <>\n      <PerspectiveCamera position={[-10, 8, 8]} far={10000} ref={mainCamera} />\n      <CameraType position={[0, 0, 5]} ref={secondCamera} {...cameraProps}>\n        <meshBasicMaterial />\n      </CameraType>\n      <ambientLight intensity={0.3} />\n      <directionalLight intensity={1} position={[10, 15, 20]} />\n      <TransformControls args={[mainCamera.current]} ref={transformControlsRef}>\n        <mesh scale={[1, 1, 1]} position={[0, 0, 0]}>\n          <boxBufferGeometry args={[1, 1, 1]} />\n          <meshPhysicalMaterial color=\"orange\" />\n        </mesh>\n      </TransformControls>\n      <OrbitTransformControls\n        ref={OrbitTransformControlsRef}\n        args={[mainCamera.current]}\n        transformControlsRefs={[transformControlsRef]}\n      />\n    </>\n  )\n}\n","import { Container, Grid } from '@material-ui/core'\nimport React, { useEffect } from 'react'\nimport Prism from 'prismjs'\nimport Code from '../components/Code'\n\nimport 'prismjs/components/prism-c'\nimport 'prismjs/components/prism-glsl'\n\nconst vertexShader = `\nattribute vec4 aVertexPosition;\nattribute vec3 aVertexNormal;\nattribute vec2 aTextureCoord;\nuniform mat4 uNormalMatrix;\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nvarying highp vec2 vTextureCoord;\nvarying highp vec3 vLighting;\nvoid main(void) {\n  gl_Position = uProjectionMatrix * uModelViewMatrix * aVertexPosition;\n  vTextureCoord = aTextureCoord;\n  // Apply lighting effect\n  highp vec3 ambientLight = vec3(0.3, 0.3, 0.3);\n  highp vec3 directionalLightColor = vec3(1, 1, 1);\n  highp vec3 directionalVector = normalize(vec3(0.85, 0.8, 0.75));\n  highp vec4 transformedNormal = uNormalMatrix * vec4(aVertexNormal, 1.0);\n  highp float directional = max(dot(transformedNormal.xyz, directionalVector), 0.0);\n  vLighting = ambientLight + (directionalLightColor * directional);\n}`\n\nconst vertexShader2 = `\nattribute vec3 vertex;\nattribute vec3 normal;\n\nuniform mat4 _mvProj;\nuniform mat3 _norm;\n\nvarying vec3 vColor;\nvarying vec3 localPos;\n\n#pragma include \"light.glsl\"\n\nvec3 materialColor = vec3(1.0,0.7,0.8);\nvec3 specularColor = vec3(1.0,1.0,1.0);\n\nvoid main(void) {\n\t// compute position\n\tgl_Position = _mvProj * vec4(vertex, 1.0);\n\tlocalPos = vertex;\n\t// compute light info\n\tvec3 n = normalize(_norm * normal);\n\tvec3 diffuse;\n\tfloat specular;\n\tfloat glowingSpecular = 50.0;\n\tgetDirectionalLight(n, _dLight, glowingSpecular, diffuse, specular);\n\tvColor = max(diffuse,_ambient.xyz)*materialColor+specular*specularColor+_ambient;\n}\n`\n\nconst fragmentShader = `\nvarying highp vec2 vTextureCoord;\nvarying highp vec3 vLighting;\nuniform sampler2D uSampler;\nvoid main(void) {\n  highp vec4 texelColor = texture2D(uSampler, vTextureCoord);\n  gl_FragColor = vec4(texelColor.rgb * vLighting, texelColor.a);\n}`\n\nconst fragmentShader2 = `\n#ifdef GL_ES\nprecision highp float;\n#endif\n\nuniform vec3 BrickColor, MortarColor;\nuniform vec3 BrickSize;\nuniform vec3 BrickPct;\n\nvarying vec3 vColor;\nvarying vec3 localPos;\n\nvoid main() {\n\tvec3 color;\n\tvec3 position, useBrick;\n\tposition = localPos / BrickSize.xyz;\n\n\tif (fract(position.y * 0.5) > 0.5){\n\t\tposition.x += 0.5;\n\t\tposition.z += 0.5;\n\t}\n\tposition = fract(position);\n\tuseBrick = step(position, BrickPct.xyz);\n\n\tcolor = mix(MortarColor, BrickColor, useBrick.x * useBrick.y * useBrick.z);\n\tcolor *= vColor;\n\n\tgl_FragColor = vec4(color, 1.0);\n}`\n\nexport default function Shaders() {\n  useEffect(() => {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }, [])\n  return (\n    <div\n      style={{ backgroundColor: '#2d2d2d', width: '100vw', height: '100vh' }}\n    >\n      <Container>\n        <h1 style={{ color: '#ccc', padding: '20px' }}>Shaders</h1>\n        <Grid container justify=\"space-around\" wrap=\"nowrap\">\n          <Grid>\n            <h2 style={{ color: '#ccc' }}>Vertex shader</h2>\n            <Code code={vertexShader2} language=\"glsl\" />\n          </Grid>\n          <Grid>\n            <h2 style={{ color: '#ccc' }}>Fragment shader</h2>\n            <Code code={fragmentShader2} language=\"glsl\" />\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  )\n}\n","export const canvasCode = `\nconst screen = document.getElementById(\"screen\");\n`\n\nexport const rendererCode = `\nconst renderer = new THREE.WebGLRenderer();\nrenderer.setSize(screen.offsetWidth, screen.offsetHeight);\nscreen.appendChild(renderer.domElement);\n`\n\nexport const sceneCode = `\nconst scene = new THREE.Scene();\n`\n\nexport const cameraCode = `\nconst camera = new THREE.PerspectiveCamera(\n  75,\n  screen.offsetWidth / screen.offsetHeight,\n  0.1,\n  1000\n);\ncamera.position.z = 5;\ncamera.lookAt(0, 0, 0);\n`\n\nexport const lightCode = `\nconst pointLight = new THREE.PointLight(0xaaaaaa);\npointLight.position.set(5, 10, 15);\nscene.add(pointLight);\nconst light = new THREE.AmbientLight( 0xaaaaaa, 0.5 );\nscene.add( light );\n`\n\nexport const meshCode = `\nconst geometry = new THREE.BoxGeometry(2, 2, 2);\nconst material = new THREE.MeshPhongMaterial({ color: 0x0000ff });\nconst cube = new THREE.Mesh(geometry, material);\nscene.add(cube);\n`\n\nexport const createTShirt = `\nconst tshirt = {\n  color: \"#eeeeee\",\n  isMale: true,\n  loadImage() {\n    file && file.click();\n  },\n  maleMesh: null,\n  femaleMesh: null,\n  changeVisibility(maleVisible) {\n    this.maleMesh.visible = maleVisible;\n    this.femaleMesh.visible = !maleVisible;\n  },\n  changeColor(colorString) { // \"#eeeeee\"\n    this.maleMesh.children[0].material.color.set(\n      +colorString.replace(\"#\", \"0x\") // \"#eeeeee\" => 0xeeeeee\n    );\n  },\n  changeTexture(texture) {\n    texture.flipY = false;\n    this.maleMesh.children[1].material.map = texture;\n  }\n};\n`\n\nexport const loadTShirtCode = (modelLoadedCode = '') => `\nconst loader = new GLTFLoader();\nloader.load(\n\t'models/t-shirts.glb',\n\t(gltf) => {\n      ${modelLoadedCode\n        .split(/\\r?\\n/)\n        .map((l) => '      ' + l)\n        .join('\\n')}\n  },\n\t(xhr) => console.log((xhr.loaded / xhr.total * 100 ) + '% loaded'),\n\t(error) => console.log( 'An error happened' )\n);\n`\n\nexport const modelLoadedCode = `\nrenderer.setClearColor(0xffffff);\nconst [male, female] = gltf.scene.children;\nscene.add(female);\nscene.add(male);\ntshirt.maleMesh = male;\ntshirt.femaleMesh = female;\ntshirt.changeVisibility(true);\ntshirt.changeColor(tshirt.color);\n`\n\nexport const datGUICode = `\nwindow.gui = new dat.GUI();\ngui\n  .add(tshirt, \"isMale\")\n  .name(\"Male / Female\")\n  .onChange((value) => {\n    tshirt.changeVisibility(value);\n  });\ngui.addColor(tshirt, \"color\").onChange((color) => {\n  tshirt.changeColor(color);\n});\ngui.add(tshirt, \"loadImage\").name(\"Upload image\");\n`\n\nexport const renderCode = `\nrenderer.render(scene, camera);\n`\n\nexport const rotateXCode = `\ncube.rotation.x = 30 * Math.PI / 180;\n`\n\nexport const rotateYCode = `cube.rotation.y = -30 * Math.PI / 180;\n`\n\nexport const setIntervalCode = `\nfunction animate () {\n  cube.rotation.x += 0.01;\n  cube.rotation.y += 0.01;\n  renderer.render(scene, camera);\n};\n\nsetInterval(animate, 1/60 * 1000);\n`\n\nexport const requestAnimationFrameCode = `\nfunction animate () {\n  requestAnimationFrame(animate);\n  cube.rotation.x += 0.01;\n  cube.rotation.y += 0.01;\n  renderer.render(scene, camera);\n};\n`\n\nexport const animateCode = `\nanimate();\n`\n\nexport const createOrbitControlsCode = `\nconst controls = new OrbitControls( camera, renderer.domElement );\ncontrols.minDistance = 2;\ncontrols.maxDistance = 10;\ncontrols.update();\n`\n\nexport const renderWithOrbitControlsCode = `\nfunction animate() {\n\trequestAnimationFrame( animate );\n\tcontrols.update();\n\trenderer.render( scene, camera );\n}\n`\n\nexport const createFileElement = `\nconst textureLoader = new THREE.TextureLoader();\n\nconst file = document.createElement(\"input\");\nfile.type = \"file\";\nfile.accept = \"image/x-png,image/gif,image/jpeg\";\nfile.addEventListener(\"change\", (e) => {\n  if (!e.target.files || !e.target.files[0]) {\n    return;\n  }\n  textureLoader.load(\n    URL.createObjectURL(e.target.files[0]),\n    (texture) => tshirt.changeTexture(texture),\n    (xhr) => console.log((xhr.loaded / xhr.total) * 100 + \"% loaded\"),\n    (err) => console.error(\"An error happened.\")\n  );\n});\n`\n","import React from 'react'\nimport ThreeCode from '../components/ThreeCode'\nimport * as codeExample from '../codeExample'\n\nconst codeExampleSlides = [\n  {\n    path: 'Code Example',\n    showDiffOnly: false,\n  },\n  {\n    path: 'Code Example: Create Canvas',\n    newCode: codeExample.canvasCode,\n  },\n  {\n    path: 'Code Example: Create Renderer',\n    newCode: codeExample.canvasCode + codeExample.rendererCode,\n  },\n  {\n    path: 'Code Example: Create Scene',\n    newCode:\n      codeExample.canvasCode + codeExample.rendererCode + codeExample.sceneCode,\n  },\n  {\n    path: 'Code Example: Create Camera',\n    newCode:\n      codeExample.canvasCode +\n      codeExample.rendererCode +\n      codeExample.sceneCode +\n      codeExample.cameraCode,\n  },\n  {\n    path: 'Code Example: Create Light',\n    newCode:\n      codeExample.canvasCode +\n      codeExample.rendererCode +\n      codeExample.sceneCode +\n      codeExample.cameraCode +\n      codeExample.lightCode,\n  },\n  {\n    path: 'Code Example: Create Mesh',\n    newCode:\n      codeExample.canvasCode +\n      codeExample.rendererCode +\n      codeExample.sceneCode +\n      codeExample.cameraCode +\n      codeExample.lightCode +\n      codeExample.meshCode,\n  },\n  {\n    path: 'Code Example: Render',\n    newCode:\n      codeExample.canvasCode +\n      codeExample.rendererCode +\n      codeExample.sceneCode +\n      codeExample.cameraCode +\n      codeExample.lightCode +\n      codeExample.meshCode +\n      codeExample.renderCode,\n  },\n  {\n    path: 'Code Example: Rotate X',\n    newCode:\n      codeExample.canvasCode +\n      codeExample.rendererCode +\n      codeExample.sceneCode +\n      codeExample.cameraCode +\n      codeExample.lightCode +\n      codeExample.meshCode +\n      codeExample.rotateXCode +\n      codeExample.renderCode,\n  },\n  {\n    path: 'Code Example: Rotate Y',\n    newCode:\n      codeExample.canvasCode +\n      codeExample.rendererCode +\n      codeExample.sceneCode +\n      codeExample.cameraCode +\n      codeExample.lightCode +\n      codeExample.meshCode +\n      codeExample.rotateXCode +\n      codeExample.rotateYCode +\n      codeExample.renderCode,\n  },\n  {\n    path: 'Code Example: Use setInterval',\n    newCode:\n      codeExample.canvasCode +\n      codeExample.rendererCode +\n      codeExample.sceneCode +\n      codeExample.cameraCode +\n      codeExample.lightCode +\n      codeExample.meshCode +\n      codeExample.setIntervalCode,\n  },\n  {\n    path: 'Code Example: Use requestAnimationFrame',\n    newCode:\n      codeExample.canvasCode +\n      codeExample.rendererCode +\n      codeExample.sceneCode +\n      codeExample.cameraCode +\n      codeExample.lightCode +\n      codeExample.meshCode +\n      codeExample.requestAnimationFrameCode,\n  },\n  {\n    path: 'Code Example: Call Animate',\n    newCode:\n      codeExample.canvasCode +\n      codeExample.rendererCode +\n      codeExample.sceneCode +\n      codeExample.cameraCode +\n      codeExample.lightCode +\n      codeExample.meshCode +\n      codeExample.requestAnimationFrameCode +\n      codeExample.animateCode,\n  },\n  {\n    path: 'Code Example: OrbitControls',\n    newCode:\n      codeExample.canvasCode +\n      codeExample.rendererCode +\n      codeExample.sceneCode +\n      codeExample.cameraCode +\n      codeExample.lightCode +\n      codeExample.meshCode +\n      codeExample.createOrbitControlsCode +\n      codeExample.renderWithOrbitControlsCode +\n      codeExample.animateCode,\n  },\n  {\n    path: 'Code Example: Load GLTF Models',\n    newCode:\n      codeExample.canvasCode +\n      codeExample.rendererCode +\n      codeExample.sceneCode +\n      codeExample.cameraCode +\n      codeExample.lightCode +\n      codeExample.createOrbitControlsCode +\n      codeExample.renderWithOrbitControlsCode +\n      codeExample.animateCode +\n      codeExample.loadTShirtCode(),\n  },\n  {\n    path: 'Code Example: Create T-Shirt model',\n    newCode:\n      codeExample.canvasCode +\n      codeExample.createTShirt +\n      codeExample.rendererCode +\n      codeExample.sceneCode +\n      codeExample.cameraCode +\n      codeExample.lightCode +\n      codeExample.createOrbitControlsCode +\n      codeExample.renderWithOrbitControlsCode +\n      codeExample.animateCode +\n      codeExample.loadTShirtCode(),\n  },\n  {\n    path: 'Code Example: Add GLTF Models on scene',\n    newCode:\n      codeExample.canvasCode +\n      codeExample.createTShirt +\n      codeExample.rendererCode +\n      codeExample.sceneCode +\n      codeExample.cameraCode +\n      codeExample.lightCode +\n      codeExample.createOrbitControlsCode +\n      codeExample.renderWithOrbitControlsCode +\n      codeExample.animateCode +\n      codeExample.loadTShirtCode(codeExample.modelLoadedCode),\n  },\n  {\n    path: 'Code Example: Add Texture Loader',\n    newCode:\n      codeExample.canvasCode +\n      codeExample.createFileElement +\n      codeExample.createTShirt +\n      codeExample.rendererCode +\n      codeExample.sceneCode +\n      codeExample.cameraCode +\n      codeExample.lightCode +\n      codeExample.createOrbitControlsCode +\n      codeExample.renderWithOrbitControlsCode +\n      codeExample.animateCode +\n      codeExample.loadTShirtCode(codeExample.modelLoadedCode),\n  },\n  {\n    path: 'Code Example: Add Dat GUI',\n    newCode:\n      codeExample.canvasCode +\n      codeExample.createFileElement +\n      codeExample.createTShirt +\n      codeExample.rendererCode +\n      codeExample.sceneCode +\n      codeExample.cameraCode +\n      codeExample.lightCode +\n      codeExample.createOrbitControlsCode +\n      codeExample.renderWithOrbitControlsCode +\n      codeExample.animateCode +\n      codeExample.loadTShirtCode(\n        codeExample.modelLoadedCode + codeExample.datGUICode\n      ),\n  },\n].map(({ path, newCode, ...props }, i, slides) => ({\n  path,\n  component: () => (\n    <ThreeCode oldCode={slides[i - 1]?.newCode} newCode={newCode} {...props} />\n  ),\n}))\n\nexport default codeExampleSlides\n","import { ISlide } from './components/Slides'\nimport React, { Suspense, useEffect, useRef } from 'react'\nimport CanvasWithTitle from './layouts/CanvasWithTitle'\nimport {\n  Html,\n  OrbitControls,\n  OrthographicCamera,\n  PerspectiveCamera,\n  TransformControls,\n  useHelper,\n  useTexture,\n} from '@react-three/drei'\nimport Flash from './prefabs/Flash'\nimport ITechArt from './prefabs/iTechArt'\nimport U5 from './prefabs/U5'\nimport {\n  CameraHelper,\n  Color,\n  SpotLightHelper,\n  Texture,\n  TextureLoader,\n} from 'three'\nimport LightsVisualization from './slides/Light'\nimport MaterialsVisualization from './slides/Materials'\nimport WebGLVersions from './prefabs/WebGLVersions'\nimport WebGL from './prefabs/WebGL'\nimport CameraSlide from './slides/Camera'\nimport {\n  Avatar,\n  Container,\n  Divider,\n  Grid,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from '@material-ui/core'\nimport { useLoader } from 'react-three-fiber'\nimport WebGLExampleCode from './slides/WebGLExampleCode'\nimport WebGLExample from './slides/WebGLExample'\nimport Shaders from './slides/Shaders'\nimport ThreeCode from './components/ThreeCode'\nimport * as codeExample from './codeExample'\nimport codeExampleSlides from './slides/CodeExampleSlides'\nimport TShirts from './prefabs/T-shirts'\n\nlet SCREEN_WIDTH = window.innerWidth\nlet SCREEN_HEIGHT = window.innerHeight\nlet aspect = SCREEN_WIDTH / SCREEN_HEIGHT\nconst frustumSize = 600\n\nexport const slides: ISlide[] = [\n  {\n    path: 'Web in three dimensions',\n    component: () => (\n      <CanvasWithTitle>\n        <Html position={[-5, 3, 0]}>\n          <h1 style={{ fontSize: '200px', width: '1200px' }}>\n            Web in <span style={{ color: 'red' }}>three</span> dimensions\n          </h1>\n        </Html>\n        <pointLight intensity={1} position={[-10, 10, 15]} />\n        <pointLight intensity={1} position={[5, 0, 5]} />\n      </CanvasWithTitle>\n    ),\n  },\n  {\n    path: 'Introduction',\n    component: () => (\n      <CanvasWithTitle>\n        <Html position={[-5, 2, 0]}>\n          <Grid container direction=\"row\" wrap=\"nowrap\">\n            <Grid item>\n              <Avatar\n                src=\"/me.jpg\"\n                style={{ width: '400px', height: '400px' }}\n              />\n            </Grid>\n            <Grid item>\n              <h3 style={{ fontSize: '64px', width: '500px' }}>\n                Aleh Katsiuba\n              </h3>\n              <h3 style={{ width: '500px' }}>Software Engineer</h3>\n            </Grid>\n          </Grid>\n        </Html>\n        <Suspense fallback={null}>\n          <group position={[2.6, -0.8, 0]}>\n            <ITechArt position={[-2, 0, 0]} />\n            <U5 position={[1, 0, 0]} />\n          </group>\n        </Suspense>\n        <pointLight intensity={1} position={[-10, 10, 15]} />\n        <pointLight intensity={1} position={[5, 0, 5]} />\n      </CanvasWithTitle>\n    ),\n  },\n  {\n    path: 'Adobe flash player',\n    component: () => (\n      <CanvasWithTitle>\n        <Suspense fallback={null}>\n          <Flash position={[0, -1, 0]} scale={[2, 2, 2]} />\n        </Suspense>\n        <ambientLight intensity={0.3} />\n        <spotLight\n          intensity={1}\n          angle={0.1}\n          penumbra={1}\n          position={[10, 15, 20]}\n        />\n        <OrbitControls />\n      </CanvasWithTitle>\n    ),\n  },\n  {\n    path: 'WebGL',\n    component: () => (\n      <CanvasWithTitle>\n        <Suspense fallback={null}>\n          <WebGL scale={[2, 2, 2]} />\n          {/* <TShirts /> */}\n        </Suspense>\n        <ambientLight intensity={0.7} />\n        <spotLight\n          intensity={1}\n          angle={0.1}\n          penumbra={1}\n          position={[10, 15, 20]}\n        />\n        <OrbitControls />\n      </CanvasWithTitle>\n    ),\n  },\n  {\n    path: 'WebGL Versions',\n    component: () => (\n      <CanvasWithTitle>\n        <OrthographicCamera\n          args={[\n            (0.5 * frustumSize * aspect) / -2,\n            (0.5 * frustumSize * aspect) / 2,\n            frustumSize / 2,\n            frustumSize / -2,\n            0,\n            1000,\n          ]}\n        />\n        <Suspense fallback={null}>\n          <WebGLVersions position={[0, 0, 0]} />\n        </Suspense>\n        <ambientLight intensity={0.7} />\n        <OrbitControls />\n      </CanvasWithTitle>\n    ),\n  },\n  {\n    path: 'CanIUse WebGL',\n    component: () => (\n      <iframe\n        src=\"https://caniuse.com/?search=webgl\"\n        style={{\n          width: '100%',\n          height: '100vh',\n          border: '0',\n          borderRadius: '4px',\n          overflow: 'hidden',\n        }}\n        title=\"r3f basic demo (forked)\"\n      ></iframe>\n    ),\n  },\n  {\n    path: 'WebGL Example',\n    component: () => (\n      <iframe\n        src=\"https://codesandbox.io/embed/thirsty-snow-ztbk8?fontsize=14&hidenavigation=1&theme=dark&view=preview\"\n        style={{\n          width: '100%',\n          height: '100vh',\n          border: '0',\n          borderRadius: '4px',\n          overflow: 'hidden',\n        }}\n        title=\"thirsty-snow-ztbk8\"\n        allow=\"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking\"\n        sandbox=\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"\n      ></iframe>\n    ),\n  },\n  {\n    path: 'three.js',\n    component: () => (\n      <Grid\n        container\n        justify=\"center\"\n        alignItems=\"center\"\n        style={{ height: '100vh' }}\n      >\n        <img src=\"https://miro.medium.com/max/724/1*aDcnXab1QC_5KF8JUxDEYA.png\" />\n      </Grid>\n    ),\n  },\n  {\n    path: 'three.js structure',\n    component: () => (\n      <Grid\n        container\n        justify=\"center\"\n        alignItems=\"flex-start\"\n        style={{ height: '100vh' }}\n      >\n        <img\n          style={{ maxWidth: '100vw', maxHeight: '85vh', margin: '30px' }}\n          src=\"/threejs-structure.svg\"\n        />\n      </Grid>\n    ),\n  },\n  {\n    path: 'Renderers',\n    component: () => (\n      <div>\n        <h1>Renderers</h1>\n        <ul>\n          <li>WebGLRenderer</li>\n          <li>CSS2DRenderer</li>\n          <li>CSS3DRenderer</li>\n          <li>SVGRenderer</li>\n        </ul>\n      </div>\n    ),\n  },\n  {\n    path: 'SVGRenderer',\n    component: () => (\n      <iframe\n        src=\"https://threejs.org/examples/svg_lines.html\"\n        style={{\n          width: '100%',\n          height: '100vh',\n          border: '0',\n          borderRadius: '4px',\n          overflow: 'hidden',\n        }}\n        title=\"strange-paper-3q4b2\"\n      ></iframe>\n    ),\n  },\n  {\n    path: 'Scene',\n    component: () => (\n      <CanvasWithTitle title=\"Scene\">\n        <PerspectiveCamera makeDefault position={[2, 2, 2]} />\n        <axisHelper />\n        <Html position={[1, 0, 0]}>\n          <h2 style={{ color: 'red', margin: 0 }}>X</h2>\n        </Html>\n        <Html position={[0, 1, 0]}>\n          <h2 style={{ color: 'green', margin: 0 }}>Y</h2>\n        </Html>\n        <Html position={[0, 0, 1]}>\n          <h2 style={{ color: 'blue', margin: 0 }}>Z</h2>\n        </Html>\n        <OrbitControls />\n      </CanvasWithTitle>\n    ),\n  },\n  {\n    path: 'Cameras',\n    component: () => (\n      <div>\n        <h1>Cameras</h1>\n        <ul>\n          <li>PerspectiveCamera</li>\n          <li>OrthographicCamera</li>\n          <li>CubeCamera</li>\n          <li>StereoCamera</li>\n        </ul>\n      </div>\n    ),\n  },\n  {\n    path: 'Perspective camera',\n    component: () => (\n      <CanvasWithTitle title=\"Perspective Camera\">\n        <CameraSlide CameraType={PerspectiveCamera} far={10} near={1} />\n      </CanvasWithTitle>\n    ),\n  },\n  {\n    path: 'Orthographic camera',\n    component: () => (\n      <CanvasWithTitle title=\"Orthographic Camera\">\n        <CameraSlide\n          CameraType={OrthographicCamera}\n          scale={[0.01, 0.01, 0.01]}\n          near={1}\n          cameraUpdate={(camera) => {\n            camera.left = (-0.5 * frustumSize * aspect) / 2\n            camera.right = (0.5 * frustumSize * aspect) / 2\n            camera.top = frustumSize / 2\n            camera.bottom = -frustumSize / 2\n          }}\n          args={[\n            (0.5 * frustumSize * aspect) / -2,\n            (0.5 * frustumSize * aspect) / 2,\n            frustumSize / 2,\n            frustumSize / -2,\n            0,\n            1000,\n          ]}\n        />\n      </CanvasWithTitle>\n    ),\n  },\n  {\n    path: 'Lights',\n    component: () => (\n      <div>\n        <h1>Lights</h1>\n        <ul>\n          <li>AmbientLight</li>\n          <li>DirectionalLight</li>\n          <li>PointLight</li>\n          <li>SpotLight</li>\n          <li>RectAreaLight</li>\n          <li>HemisphereLight</li>\n        </ul>\n      </div>\n    ),\n  },\n  {\n    path: 'Light',\n    component: () => (\n      <CanvasWithTitle title=\"Light\">\n        <LightsVisualization />\n      </CanvasWithTitle>\n    ),\n  },\n  {\n    path: 'Mesh',\n    component: () => (\n      <CanvasWithTitle title=\"Mesh\">\n        {/* <OrthographicCamera makeDefault args={[1, 1, 1, 0, 1000]} /> */}\n        <OrbitControls />\n        <mesh>\n          <boxBufferGeometry args={[2, 2, 2]} />\n          <meshPhysicalMaterial color=\"orange\" />\n        </mesh>\n        <ambientLight intensity={0.3} />\n        <spotLight\n          intensity={1}\n          angle={0.1}\n          penumbra={1}\n          position={[10, 15, 20]}\n        />\n      </CanvasWithTitle>\n    ),\n  },\n  {\n    path: 'Geometry',\n    component: () => (\n      <CanvasWithTitle title=\"Geometry\">\n        <OrbitControls />\n        <mesh>\n          <boxBufferGeometry args={[2, 2, 2]} />\n        </mesh>\n      </CanvasWithTitle>\n    ),\n  },\n  {\n    path: 'Geometry wireframe',\n    component: () => (\n      <CanvasWithTitle title=\"Geometry wireframe\">\n        <OrbitControls />\n        <mesh>\n          <boxBufferGeometry args={[2, 2, 2]} />\n          <meshBasicMaterial color=\"green\" wireframe />\n        </mesh>\n      </CanvasWithTitle>\n    ),\n  },\n  {\n    path: 'Software',\n    component: () => (\n      <Container maxWidth=\"lg\">\n        <h1>Software</h1>\n        <Grid container justify=\"space-around\">\n          <Grid>\n            <img\n              width=\"500\"\n              src=\"https://download.blender.org/branding/blender_logo_socket.png\"\n            />\n          </Grid>\n          <Grid>\n            <img width=\"500\" src=\"/3ds-max-logo.png\" />\n          </Grid>\n          <Grid>\n            <img width=\"500\" src=\"/maya-logo.png\" />\n          </Grid>\n        </Grid>\n      </Container>\n    ),\n  },\n  {\n    path: 'threejs.org/editor',\n    component: () => (\n      <iframe\n        src=\"https://threejs.org/editor/\"\n        style={{\n          width: '100%',\n          height: '100vh',\n          border: '0',\n          borderRadius: '4px',\n          overflow: 'hidden',\n        }}\n      ></iframe>\n    ),\n  },\n  {\n    path: 'Materials',\n    component: () => (\n      <CanvasWithTitle title=\"Materials\">\n        <MaterialsVisualization />\n      </CanvasWithTitle>\n    ),\n  },\n  {\n    path: 'Shader',\n    component: () => <Shaders />,\n  },\n  {\n    path: 'Texture',\n    component: () => (\n      <CanvasWithTitle title=\"Texture\">\n        <OrbitControls />\n        <Suspense fallback={null}>\n          <TextureSlide />\n        </Suspense>\n      </CanvasWithTitle>\n    ),\n  },\n  {\n    path: 'Mesh Components',\n    component: () => (\n      <CanvasWithTitle title=\"Mesh Components\">\n        <OrbitControls />\n        <Suspense fallback={null}>\n          <MeshComponents />\n        </Suspense>\n      </CanvasWithTitle>\n    ),\n  },\n  ...codeExampleSlides,\n  {\n    path: 'CodeSandbox Example',\n    component: () => (\n      <iframe\n        src=\"https://codesandbox.io/embed/strange-paper-3q4b2?fontsize=14&hidenavigation=1&theme=dark\"\n        style={{\n          width: '100%',\n          height: '100vh',\n          border: '0',\n          borderRadius: '4px',\n          overflow: 'hidden',\n        }}\n        title=\"strange-paper-3q4b2\"\n        allow=\"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking\"\n        sandbox=\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"\n      ></iframe>\n    ),\n  },\n  {\n    path: 'The End',\n    component: () => (\n      <CanvasWithTitle>\n        <Html position={[-5, 2, 0]}>\n          <h1 style={{ fontSize: '200px', width: '1200px' }}>\n            The <span style={{ color: 'red' }}>End</span>\n          </h1>\n        </Html>\n        <pointLight intensity={1} position={[-10, 10, 15]} />\n        <pointLight intensity={1} position={[5, 0, 5]} />\n      </CanvasWithTitle>\n    ),\n  },\n]\n\nfunction TextureSlide() {\n  const bumpMap = useTexture('https://threejs.org/examples/textures/crate.gif')\n  return (\n    <mesh>\n      <boxBufferGeometry args={[3, 3, 0.01]} />\n      <meshBasicMaterial map={bumpMap} />\n    </mesh>\n  )\n}\n\nfunction MeshComponents() {\n  const bumpMap = useTexture('https://threejs.org/examples/textures/crate.gif')\n  return (\n    <>\n      <mesh position={[-5, 0, 0]}>\n        <boxBufferGeometry args={[1, 1, 1]} />\n        <meshBasicMaterial wireframe color={0x00ff00} />\n      </mesh>\n      <Html position={[-2.5, 0, 0]}>\n        <img\n          style={{ transform: 'translate(-55px, -55px)' }}\n          width=\"110px\"\n          src=\"https://wiki.thedarkmod.com/images/5/5a/UV_Tut_22.jpg\"\n          alt=\"UV\"\n        />\n      </Html>\n      <Html position={[0, 0, 0]}>\n        <img\n          style={{ transform: 'translate(-55px, -55px)' }}\n          width=\"110px\"\n          src=\"https://threejs.org/examples/textures/crate.gif\"\n          alt=\"texture\"\n        />\n      </Html>\n      <mesh position={[2.5, 0, 0]}>\n        <sphereBufferGeometry args={[0.6, 32, 32]} />\n        <meshBasicMaterial map={bumpMap} />\n      </mesh>\n      <mesh position={[5, 0, 0]}>\n        <boxBufferGeometry args={[1, 1, 1]} />\n        <meshBasicMaterial map={bumpMap} />\n      </mesh>\n    </>\n  )\n}\n","import React from 'react'\nimport './App.css'\nimport { HashRouter as Router } from 'react-router-dom'\nimport Slides from './components/Slides'\nimport { slides } from './presentation'\nimport { LinearProgress } from '@material-ui/core'\n\nfunction App() {\n  return (\n    <Router>\n      <Slides slides={slides} />\n    </Router>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport types from './types'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","import Prism from 'prismjs'\nimport 'prismjs/themes/prism-tomorrow.css'\n\nexport default function Code({ code = '', language = 'js', children = '' }) {\n  return (\n    <pre\n      style={{ display: 'inline', margin: 0, padding: 0, overflow: 'auto' }}\n      className={`language-${language}`}\n      dangerouslySetInnerHTML={{\n        __html: Prism.highlight(\n          children || code,\n          Prism.languages[language],\n          language\n        ),\n      }}\n    ></pre>\n  )\n}\n","import { Grid } from '@material-ui/core'\nimport React, { useEffect, useRef } from 'react'\nimport ReactDiffViewer, { DiffMethod } from 'react-diff-viewer'\nimport Code from './Code'\nimport * as THREE from 'three'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js'\nimport * as dat from 'dat.gui'\n\nconst threeImport = `import * as THREE from \"three\";\\n`\n\nexport default function ThreeCode({\n  oldCode = '',\n  newCode = '',\n  ...diffViewerProps\n}) {\n  useEffect(() => {\n    window.THREE = THREE\n    window['OrbitControls'] = OrbitControls\n    window['GLTFLoader'] = GLTFLoader\n    window['dat'] = dat\n  }, [])\n\n  useEffect(() => {\n    document.getElementById('screen').innerHTML = ''\n    eval(newCode)\n    return () => {\n      if (window['gui']) {\n        window['gui'].destroy()\n        window['gui'] = null\n      }\n    }\n  }, [newCode])\n\n  return (\n    <Grid\n      container\n      alignItems=\"stretch\"\n      style={{ width: '100%', height: '100%', backgroundColor: '#2d2d2d' }}\n    >\n      <Grid style={{ width: '50%', height: '100%', overflow: 'auto' }}>\n        <code className=\"language-js\">\n          <ReactDiffViewer\n            oldValue={threeImport + oldCode}\n            newValue={threeImport + newCode}\n            splitView={false}\n            compareMethod={DiffMethod.LINES}\n            extraLinesSurroundingDiff={20}\n            useDarkTheme\n            renderContent={(str) => <Code>{str}</Code>}\n            onLineNumberClick={(id) => {\n              console.log(id)\n            }}\n            {...diffViewerProps}\n          />\n        </code>\n      </Grid>\n      <Grid\n        id=\"screen\"\n        style={{ width: '50%', height: '100%', backgroundColor: 'black' }}\n      ></Grid>\n    </Grid>\n  )\n}\n"],"sourceRoot":""}